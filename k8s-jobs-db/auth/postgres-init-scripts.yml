apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: swyw
data:
  01-create-db.sh: |
    #!/bin/bash
    set -e
    DB_NAME=${DB_NAME_AUTH:-swyw_auth}
    DB_ADMIN_PASSWORD=${DB_ADMIN_PASSWORD:-default}
    DB_APP_USER_PASSWORD=${DB_APP_USER_PASSWORD:-default}
    DB_HOST=${DB_HOST:-postgres.postgres.svc.cluster.local}

    echo "=== Creando base de datos ==="
    psql  -h "$DB_HOST" -U "$POSTGRES_USER" -tc "SELECT 1 FROM pg_database WHERE datname = '$DB_NAME'" | grep -q 1 || \
    psql  -h "$DB_HOST" -U "$POSTGRES_USER" -c "CREATE DATABASE $DB_NAME"

    echo "=== Creando roles ==="
    psql  -h "$DB_HOST" -U "$POSTGRES_USER" -tc "SELECT 1 FROM pg_roles WHERE rolname='db_admin'" | grep -q 1 || \
    psql  -h "$DB_HOST" -U "$POSTGRES_USER" -c "CREATE ROLE db_admin LOGIN PASSWORD '$DB_ADMIN_PASSWORD' SUPERUSER;"

    psql -h "$DB_HOST" -U "$POSTGRES_USER" -tc "SELECT 1 FROM pg_roles WHERE rolname='app_user'" | grep -q 1 || \
    psql -h "$DB_HOST" -U "$POSTGRES_USER" -c "CREATE ROLE app_user LOGIN PASSWORD '$DB_APP_USER_PASSWORD';"

    echo "=== Configurando esquema y permisos ==="
    psql  -h "$DB_HOST" -U "$POSTGRES_USER" -d "$DB_NAME" << EOF
    CREATE SCHEMA IF NOT EXISTS core AUTHORIZATION app_user;
    REVOKE ALL ON SCHEMA public FROM PUBLIC;
    GRANT USAGE, CREATE ON SCHEMA core TO app_user;
    ALTER DEFAULT PRIVILEGES IN SCHEMA core GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO app_user;
    ALTER DEFAULT PRIVILEGES IN SCHEMA core GRANT USAGE, SELECT ON SEQUENCES TO app_user;
    EOF

    echo "=== InicializaciÃ³n completada ==="

  02-schema.sql: |
    \c swyw_auth;
    CREATE TABLE IF NOT EXISTS core.users (
        id SERIAL NOT NULL,
        name VARCHAR(100) NOT NULL,
        email VARCHAR(150) UNIQUE NOT NULL,
        create_at TIMESTAMP DEFAULT NOW(),
        pass TEXT NOT NULL,
        CONSTRAINT pk_id_user PRIMARY KEY ("id")
    );
